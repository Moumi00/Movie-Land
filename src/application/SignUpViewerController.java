package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;

import javafx.event.ActionEvent;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Pane;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import utilities.DataValidator;
import utilities.Serializer;
import javafx.scene.control.PasswordField;

import javafx.scene.control.DatePicker;

import javafx.scene.control.ChoiceBox;

import utilities.DataValidator;

import dataclass.Person;

public class SignUpViewerController {
  @FXML
  private ImageView profilePicture;
  @FXML
  private TextField firstNameTextField;
  @FXML
  private TextField lastNameTextField;
  @FXML
  private TextField handleTextField;
  @FXML
  private ChoiceBox<String> genderChoiceBox;
  @FXML
  private DatePicker datepicker;
  @FXML
  private PasswordField passwordfield;
  @FXML
  private PasswordField confirmPasswordField;
  @FXML
  private Button setProfilePictureButton;
  @FXML
  private Button saveButton;
  @FXML
  private Button backButton;
  @FXML
  private Button clearButton;
  
  public String profilePicturePath;
  
  private ArrayList<Person> personList;
  
  public void ResetUI()
  {
    this.firstNameTextField.setText("");
    this.lastNameTextField.setText("");
    this.handleTextField.setText("");
    
    this.genderChoiceBox.setValue(null);
    this.datepicker.setValue(null);
    
    this.passwordfield.setText("");
    this.confirmPasswordField.setText("");
    
    File imageFile = new File("C://Users//User//eclipse-workspace//Project Finals//bin//application//defaultprofile.png");
    this.profilePicturePath = imageFile.toURI().getPath();
    updateProfileImageViewNode();
  }
  
  public void updateProfileImageViewNode()
  {
    Image profileImage = new Image("file://" + this.profilePicturePath);
    this.profilePicture.setImage(profileImage);
  }

  // Event Listener on Button[#setProfilePictureButton].onAction
  @FXML
  public void handleSetProfilePictureButtonClicked(ActionEvent event) 
  {
    // TODO Autogenerated
    FileChooser fileChooser = new FileChooser();
    Stage primaryStage = (Stage) this.setProfilePictureButton.getScene().getWindow();
    File selectedFile = fileChooser.showOpenDialog(primaryStage);
    
    if(selectedFile != null)
    {
      this.profilePicturePath = selectedFile.toURI().getPath();
      System.out.println(this.profilePicturePath);
      updateProfileImageViewNode();
    }
  }
  
  //Event Listener on Button[#saveButton].onAction
  @FXML
  void handleBackButton(ActionEvent event) throws IOException 
  {
    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("LogInViewer.fxml"));
    Pane root = (Pane) fxmlLoader.load();
    Scene scene = new Scene(root);
    Stage primaryStage = (Stage) this.backButton.getScene().getWindow(); 
    primaryStage.setScene(scene);
    primaryStage.show();
  }

  // Event Listener on Button[#saveButton].onAction
  @FXML
  public void handleSaveButton(ActionEvent event) 
  {
    // TODO: handle has to be unique check;
    
    String firstName = this.firstNameTextField.getText();
    String lastName = this.lastNameTextField.getText();
    String handle = this.handleTextField.getText();
    String gender = (String)this.genderChoiceBox.getValue();
    
    LocalDate date = this.datepicker.getValue();
    
    String password = this.passwordfield.getText();
    String confirmPassword = this.confirmPasswordField.getText();
    String pathToProfilePicture = this.profilePicturePath;
    
    try
    {
      DataValidator.isValidData(firstName, lastName, handle, gender, date, password, confirmPassword, pathToProfilePicture, personList);
      
      Person person = new Person(firstName, lastName, handle, gender, date, password, pathToProfilePicture);
      personList.add(person);
      
      Stage primaryStage = (Stage) this.saveButton.getScene().getWindow();
      String message = "Your account has been saved succesfully.";
      ViewUtilities.showMessage(message, primaryStage);
      boolean isSuccess = Serializer.serialize("./Accounts.bin", personList);
      this.ResetUI();
    }
    catch(Exception error)
    {
      //Need to be replaced by error dialog box.
      Stage primaryStage = (Stage) this.saveButton.getScene().getWindow();
      ViewUtilities.showErrorMessageDialougeBox(error.getMessage(), primaryStage);
    }
    
  }
  
  // Event Listener on Button[#clearButton].onAction
  @FXML
  public void handleClearButton(ActionEvent event) 
  {
    // TODO Autogenerated
    ResetUI();
  }
  
  public void initialize()
  {
    //this.genderChoiceBox = new ChoiceBox<String>();
    this.genderChoiceBox.getItems().addAll("Male", "Female", "Other"); 
    File imageFile = new File("C://Users//User//eclipse-workspace//Project Finals//bin//application//defaultprofile.png");
    this.profilePicturePath = imageFile.toURI().getPath();
    updateProfileImageViewNode();

    personList = Serializer.deserialize("./Accounts.bin" );
    
    if (personList == null) {
      personList = new ArrayList<>();
    }
  }
}
